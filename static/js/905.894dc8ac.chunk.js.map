{"version":3,"file":"static/js/905.894dc8ac.chunk.js","mappings":"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","sources":["components/Profile/Profile.module.scss","webpack://app/./src/components/Profile/PostsList/PostsList.module.scss?6c59","webpack://app/./src/components/Profile/PostsList/PostItem/PostItem.module.scss?350f","components/Profile/PostsList/PostItem/PostItem.jsx","components/Profile/PostsList/PostsList.jsx","webpack://app/./src/components/Profile/ProfileInfo/ProfileInfo.module.scss?e49f","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://app/./src/components/Profile/ProfileStatus/ProfileStatus.module.scss?b104","components/Profile/ProfileStatus/ProfileStatusHooks.jsx","webpack://app/./src/components/Forms/FormAddPost/FormAddPost.module.scss?b991","components/Forms/FormAddPost/FormAddPost.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"PostsList\":\"PostsList_PostsList__GvMzW\"};","// extracted by mini-css-extract-plugin\nexport default {\"PostItem\":\"PostItem_PostItem__8ep+9\"};","import classNames from 'classnames/bind';\r\nimport styles from './PostItem.module.scss';\r\n\r\nconst PostItem = ( props ) => {\r\n\r\n  const { likesCount, message, } = props;\r\n  const classes = classNames( [\r\n    styles.PostItem,\r\n    'post-item',\r\n    'badge',\r\n  ] );\r\n\r\n  return (\r\n    <div className={ classes }>{ message }</div>\r\n  );\r\n};\r\n\r\nexport default PostItem;","// STYLES\r\nimport classNames from 'classnames/bind';\r\nimport styles from './PostsList.module.scss';\r\n\r\n// COMPONENTS\r\nimport PostItem from './PostItem/PostItem';\r\nconst PostsList = ( props ) => {\r\n  const { posts, } = props;\r\n\r\n  const classes = classNames( [\r\n    styles.PostsList,\r\n    'my-posts',\r\n    'posts-list',\r\n  ] );\r\n\r\n  return (\r\n    <div className={ classes }>\r\n      { posts.map( post => <PostItem key={ post.id } message={ post.message } likesCount={ post.likesCount }/> ) }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostsList;","// extracted by mini-css-extract-plugin\nexport default {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__Zqrqz\"};","import classNames from 'classnames/bind';\r\nimport DataField from '../../DataField/DataField';\r\nimport styles from './ProfileInfo.module.scss';\r\n\r\nconst ProfileInfo = ( props ) => {\r\n  const { profile, email, } = props;\r\n  const classes = classNames( [\r\n    styles.ProfileInfo,\r\n    'profile-info',\r\n  ] );\r\n\r\n  return (\r\n    <div className={ classes }>\r\n      <picture>\r\n        <source srcSet={ props?.profile?.photos?.small } type=\"image/webp\" />\r\n        <img src={ props?.profile?.photos?.small } alt=\"\" />\r\n      </picture>\r\n      <DataField label=\"id: \" value={ profile?.userId }/>\r\n      <DataField label=\"name: \" value={ profile?.fullName }/>\r\n      <DataField label=\"email: \" value={ email }/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"ProfileStatus\":\"ProfileStatus_ProfileStatus__oWeBR\"};","// REACT\r\nimport { useEffect, useState, useRef } from 'react';\r\n\r\n// STYLES\r\nimport classNames from 'classnames/bind';\r\nimport styles from './ProfileStatus.module.scss';\r\n\r\nconst ProfileStatusHooks = ( props ) => {\r\n  const { setUserStatus, } = props;\r\n  const classes = classNames( [\r\n    styles.ProfileStatus,\r\n    'profile-status',\r\n  ] );\r\n\r\n  const [ editMode, setEditMode, ] = useState( false );\r\n  const [ status, setStatus, ] = useState( props.status );\r\n  const input = useRef( null );\r\n\r\n  // HANDLERS\r\n  const activateEditMode = () => {\r\n    setEditMode( true );\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode( false );\r\n    // setStatus( input.current.value );\r\n    setUserStatus( status );\r\n  };\r\n\r\n  const handleInputChange = ( e ) => {\r\n    const value = e.target.value;\r\n    setStatus( value );\r\n  };\r\n\r\n  const handleKeyPress = ( e ) => {\r\n    if ( e.key === 'Enter' ){\r\n      setEditMode( false );\r\n      setUserStatus( status );\r\n    }\r\n  };\r\n\r\n  // HOOKS\r\n  useEffect( () => {\r\n    // console.log( 'useEffect: editMode' );\r\n    if ( editMode ){\r\n      input.current.focus();\r\n    }\r\n  }, [ editMode, ] );\r\n\r\n  useEffect( () => {\r\n    // console.log( 'useEffect: status' );\r\n  }, [ status, ] );\r\n\r\n  return (\r\n    <div className={ classes }>\r\n      { editMode ?\r\n        <input\r\n          value={ status }\r\n          ref={ input }\r\n          onChange={ handleInputChange }\r\n          onBlur={ deactivateEditMode }\r\n          onKeyPress={ handleKeyPress }\r\n        /> :\r\n        <span onDoubleClick={ activateEditMode }>{ status }</span>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusHooks;","// extracted by mini-css-extract-plugin\nexport default {\"FormAddPost\":\"FormAddPost_FormAddPost__HUXlM\"};","// STYLES\r\nimport '../form.scss';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './FormAddPost.module.scss';\r\n\r\n// COMPONENTS\r\nimport Button from 'components/Button/Button';\r\nimport { Form, Field  } from 'react-final-form';\r\nimport FormControl from 'components/Forms/FormControl/FormControl';\r\n\r\n// validators\r\nimport {\r\n  composeValidators,\r\n  required,\r\n  maxLengthCreator\r\n} from '../../../utils/validators/validators';\r\n\r\nconst FormAddPost = ( props ) => {\r\n  const { addPost, } = props;\r\n\r\n  const classes = classNames( [\r\n    styles.FormAddPost,\r\n    'form-add-message',\r\n  ] );\r\n\r\n  // HANDLERS\r\n  const handleKeyPress = ( e ) => {\r\n    if ( e.key === 'Enter' ){\r\n      console.log( 'Enter' );\r\n      // addPost( newPostText ) ;\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = ( values ) => {\r\n    const { newPostText, } = values;\r\n    addPost( newPostText );\r\n  };\r\n\r\n  // const handleOnValidate = ( e ) => {};\r\n\r\n  // validators\r\n  const maxLength10 =  maxLengthCreator( 10 );\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={ handleOnSubmit }\r\n      // validate={ handleOnValidate }\r\n      render={ ( { handleSubmit, } ) => (\r\n        <form onSubmit={ handleSubmit } className={ classes } noValidate>\r\n          <Field validate={ composeValidators( required, maxLength10 ) } name=\"newPostText\">\r\n            { props => <FormControl { ...props }><textarea placeholder=\"Your post text...\" cols=\"30\" rows=\"10\"/></FormControl> }\r\n          </Field>\r\n          <Button type=\"submit\">Add Post</Button>\r\n        </form>\r\n      ) }\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormAddPost;\r\n\r\nconst oldTextarea = ( props ) => {\r\n  const { input, meta, } = props;\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <textarea { ...input } placeholder=\"Your post text...\" cols=\"30\" rows=\"10\"/>\r\n      { meta.error && meta.touched && <span className=\"error\">{ meta.error }</span> }\r\n    </div>\r\n  );\r\n};","// STYLES\r\nimport classNames from 'classnames/bind';\r\nimport styles from './Profile.module.scss';\r\n\r\n// COMPONENTS\r\nimport PostsList from 'components/Profile/PostsList/PostsList';\r\nimport ProfileInfo from 'components/Profile/ProfileInfo/ProfileInfo';\r\nimport ProfileStatusHooks from 'components/Profile/ProfileStatus/ProfileStatusHooks';\r\nimport FormAddPost from 'components/Forms/FormAddPost/FormAddPost';\r\n\r\n// import { useParams } from 'react-router-dom';\r\n\r\nconst Profile = ( props ) => {\r\n  const { profile, email, status, setUserStatus, posts, addPost, } = props;\r\n\r\n  const classes = classNames( [\r\n    styles.Profile,\r\n    'profile',\r\n  ] );\r\n\r\n  return (\r\n    <div className={ classes }>\r\n      <ProfileStatusHooks status={ status } setUserStatus={ setUserStatus }/>\r\n      <ProfileInfo profile={ profile } email={ email }/>\r\n      <FormAddPost addPost={ addPost }/>\r\n      <PostsList posts={ posts }/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\n\r\n// REDUX\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport {\r\n  getUserProfileThunkCreator,\r\n  getUserStatusThunkCreator,\r\n  setUserStatusThunkCreator,\r\n  addPost\r\n} from '../../redux/profile-reducer';\r\n\r\n// COMPONENTS\r\nimport LoaderSpinner from 'components/Loaders/LoaderSpinner/LoaderSpinner';\r\nimport Profile from './Profile';\r\n\r\n// HOC\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\r\n\r\nclass ProfileClass extends React.Component {\r\n\r\n  componentDidMount () {\r\n    const userId = this.props.userId;\r\n    if ( userId ){\r\n      this.props.getUserProfile( userId );\r\n      this.props.getUserStatus( userId );\r\n    }\r\n    else {\r\n      console.log( 'no user' );\r\n    }\r\n    // console.log( 'ProfileClass -> componentDidMount:', userId );\r\n  }\r\n\r\n  render () {\r\n    if ( !this.props.profile ){\r\n      return <LoaderSpinner isLoading={ true }/>;\r\n    }\r\n\r\n    return <Profile { ...this.props }/>;\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    posts: state.profilePage.posts,\r\n    status: state.profilePage.status,\r\n    email: state.auth.email,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect( mapStateToProps, { getUserProfile: getUserProfileThunkCreator, setUserStatus: setUserStatusThunkCreator, getUserStatus: getUserStatusThunkCreator, addPost, } ),\r\n  withAuthRedirect\r\n)( ProfileClass );\r\n","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n// REDUX\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = ( state ) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nconst withAuthRedirect = ( Component ) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render () {\r\n      if ( !this.props?.isAuth ) return <Navigate to=\"/login\"/>;\r\n\r\n      return <Component { ...this.props }/>;\r\n    }\r\n  }\r\n\r\n  return connect( mapStateToProps, {} )( RedirectComponent );\r\n};\r\n\r\nexport default withAuthRedirect;"],"names":["props","likesCount","message","classes","classNames","styles","className","posts","map","post","id","profile","email","srcSet","photos","small","type","src","alt","DataField","label","value","userId","fullName","setUserStatus","useState","editMode","setEditMode","status","setStatus","input","useRef","useEffect","current","focus","ref","onChange","e","target","onBlur","onKeyPress","key","onDoubleClick","addPost","maxLength10","maxLengthCreator","onSubmit","values","newPostText","render","handleSubmit","noValidate","validate","composeValidators","required","name","FormControl","placeholder","cols","rows","Button","ProfileClass","this","getUserProfile","getUserStatus","console","log","LoaderSpinner","isLoading","React","compose","connect","state","profilePage","auth","getUserProfileThunkCreator","setUserStatusThunkCreator","getUserStatusThunkCreator","withAuthRedirect","mapStateToProps","isAuth","Component","RedirectComponent","to"],"sourceRoot":""}