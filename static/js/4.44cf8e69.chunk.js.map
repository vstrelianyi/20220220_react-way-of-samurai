{"version":3,"file":"static/js/4.44cf8e69.chunk.js","mappings":"yKACA,EAAuB,mBCAvB,EAA8B,iC,SCkBxBA,EAAc,SAAEC,GACpB,IAAQC,EAAaD,EAAbC,QAER,OACE,gBAAKC,UAAU,eAAf,SAAgCD,EAAQE,QAI5C,EAxBoB,SAAEH,GAEpB,IAAQI,EAAcJ,EAAdI,SAEFC,EAAUC,GAAAA,CAAY,CAC1BC,EACA,iBAGF,OACE,gBAAKL,UAAYG,EAAjB,UACY,OAARD,QAAQ,IAARA,OAAA,EAAAA,EAAUI,SAAUJ,EAASK,KAAK,SAAAR,GAAO,OAAI,SAACF,EAAD,CAAgCE,QAAUA,GAAvBA,EAAQS,UCbhF,EAA0B,yBCmB1B,EAjBgB,SAAEV,GAChB,IAAMK,EAAUC,GAAAA,CAAY,CAC1BC,EACA,YAGMI,EAAaX,EAAbW,QAER,OACE,gBAAKT,UAAYG,EAAjB,UACE,gBAAKH,UAAU,SAAf,UACW,OAAPS,QAAO,IAAPA,OAAA,EAAAA,EAASH,SAAUG,EAAQF,KAAK,SAAAG,GAAM,OAAI,gBAAKV,UAAU,cAAf,SAAiDU,EAAOC,MAArBD,EAAOF,Y,UCD9F,GAAeI,E,QAAAA,IACbC,EAAAA,EADF,EANyB,SAAEf,GACzB,IAAQW,EAAaX,EAAbW,QAER,OAAO,SAAC,EAAD,CAASA,QAAUA,OCT5B,EAA+B,mC,UCA/B,G,QAAqC,gD,uCCsDrC,EAtC2B,SAAEX,GAC3B,IAAQgB,EAAgBhB,EAAhBgB,WAEFX,EAAUC,GAAAA,CAAY,CAC1BC,EACA,qBAiBF,OACE,SAAC,KAAD,CACEU,SATmB,SAAEC,GACvB,IAAQC,EAAoBD,EAApBC,eACRH,EAAYG,IASVC,OAAS,gBAAIC,EAAJ,EAAIA,aAAJ,OACP,kBAAMJ,SAAWI,EAAenB,UAAYG,EAAUiB,YAAU,EAAhE,WACE,SAAC,KAAD,CAAOC,SAAWC,EAAAA,GAAWX,KAAK,iBAAlC,SACI,SAAAb,GAAK,OAAI,SAACyB,EAAA,GAAD,gBAAaC,MAAM,UAAc1B,GAAjC,cAAyC,kBAAO2B,YAAY,2BAEzE,SAACC,EAAA,EAAD,CAAQC,KAAK,SAAb,iCC5BV,EAfqB,SAAE7B,GACrB,IAAQgB,EAAiBhB,EAAjBgB,WAEFX,EAAUC,GAAAA,CAAY,CAC1BC,EACA,kBAGF,OACE,gBAAKL,UAAYG,EAAjB,UACE,SAAC,EAAD,CAAoBW,WAAaA,OCavC,EAjBa,SAAEhB,GACb,IAAQW,EAAmCX,EAAnCW,QAASP,EAA0BJ,EAA1BI,SAAUY,EAAgBhB,EAAhBgB,WAErBX,EAAUC,GAAAA,CAAY,CAC1BC,EACA,SAGF,OACE,iBAAKL,UAAYG,EAAjB,WACE,SAAC,EAAD,CAAkBM,QAAUA,KAC5B,SAAC,EAAD,CAAaP,SAAWA,KACxB,SAAC,EAAD,CAAcY,WAAaA,Q,mBCJjC,GAFsBc,EAAAA,EAAAA,KARE,SAAEC,GACxB,MAAO,CACLpB,QAASoB,EAAMC,SAASrB,QACxBP,SAAU2B,EAAMC,SAAS5B,SACzB6B,OAAQF,EAAMG,KAAKD,UAIyB,CAAEjB,WAAAA,EAAAA,GAA5Bc,CAA6CK,I,iHCX7DC,EAAkB,SAAEL,GACxB,MAAO,CACLE,OAAQF,EAAMG,KAAKD,SAiBvB,IAbyB,SAAEI,GAAgB,IAEnCC,EAFkC,0IAGtC,WAAW,IAAD,EACR,OAAK,UAACC,KAAKvC,aAAN,OAAC,EAAYiC,QAEX,SAACI,GAAD,UAAgBE,KAAKvC,SAFM,SAAC,KAAD,CAAUwC,GAAG,eAJX,GAERC,EAAAA,WAQhC,OAAOX,EAAAA,EAAAA,IAASM,EAAiB,GAA1BN,CAAgCQ","sources":["webpack://app/./src/components/Chat/Chat.module.scss?3294","webpack://app/./src/components/Chat/MessageList/MessageList.module.scss?4c33","components/Chat/MessageList/MessageList.jsx","webpack://app/./src/components/Chat/Dialogs/Dialogs.module.scss?c234","components/Chat/Dialogs/Dialogs.jsx","components/Chat/Dialogs/DialogsContainer.jsx","webpack://app/./src/components/Chat/MessageInput/MessageInput.module.scss?ef58","webpack://app/./src/components/Forms/FormAddChatMessage/FormAddChatMessage.module.scss?4169","components/Forms/FormAddChatMessage/FormAddChatMessage.jsx","components/Chat/MessageInput/MessageInput.jsx","components/Chat/Chat.jsx","components/Chat/ChatContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Chat\":\"Chat_Chat__8hacX\"};","// extracted by mini-css-extract-plugin\nexport default {\"MessageList\":\"MessageList_MessageList__5-2Wj\"};","import classNames from 'classnames/bind';\r\nimport styles from './MessageList.module.scss';\r\n\r\nconst MessageList = ( props ) => {\r\n\r\n  const { messages, } = props;\r\n\r\n  const classes = classNames( [\r\n    styles.MessageList,\r\n    'message-list',\r\n  ] );\r\n\r\n  return (\r\n    <div className={ classes }>\r\n      { messages?.length && messages.map( message => <MessageItem key={ message.id } message={ message }/> )  }\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MessageItem = ( props ) => {\r\n  const { message, } = props;\r\n\r\n  return (\r\n    <div className=\"message-item\">{ message.text }</div>\r\n  );\r\n};\r\n\r\nexport default MessageList;","// extracted by mini-css-extract-plugin\nexport default {\"Dialogs\":\"Dialogs_Dialogs__drdv+\"};","import classNames from 'classnames/bind';\r\nimport styles from './Dialogs.module.scss';\r\n\r\nconst Dialogs = ( props ) => {\r\n  const classes = classNames( [\r\n    styles.Dialogs,\r\n    'dialogs',\r\n  ] );\r\n\r\n  const { dialogs, } = props;\r\n\r\n  return (\r\n    <div className={ classes }>\r\n      <div className=\"dialog\">\r\n        { dialogs?.length && dialogs.map( dialog => <div className=\"dialog-item\" key={ dialog.id }>{ dialog.name }</div> ) }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;","// COMPONENTS\r\nimport Dialogs from './Dialogs';\r\nimport withAuthRedirect from '../../../hoc/withAuthRedirect';\r\n\r\n// REDUX\r\nimport { compose } from 'redux';\r\n\r\nconst DialogsContainer = ( props ) => {\r\n  const { dialogs, } = props;\r\n\r\n  return <Dialogs dialogs={ dialogs }/>;\r\n};\r\n\r\nexport default compose(\r\n  withAuthRedirect\r\n)( DialogsContainer );\r\n","// extracted by mini-css-extract-plugin\nexport default {\"MessageInput\":\"MessageInput_MessageInput__NpPUW\"};","// extracted by mini-css-extract-plugin\nexport default {\"FormAddChatMessage\":\"FormAddChatMessage_FormAddChatMessage__DnVda\"};","// STYLES\r\nimport '../form.scss';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './FormAddChatMessage.module.scss';\r\n\r\n// COMPONENTS\r\nimport Button from 'components/Button/Button';\r\nimport { Form, Field  } from 'react-final-form';\r\nimport FormControl from 'components/Forms/FormControl/FormControl';\r\n\r\n// validators\r\nimport {\r\n  composeValidators,\r\n  required,\r\n  maxLengthCreator\r\n} from '../../../utils/validators/validators';\r\n\r\nconst FormAddChatMessage = ( props ) => {\r\n  const { addMessage, } = props;\r\n\r\n  const classes = classNames( [\r\n    styles.FormAddChatMessage,\r\n    'form-add-message',\r\n  ] );\r\n\r\n  // HANDLERS\r\n  const handleKeyPress = ( e ) => {\r\n    if ( e.key === 'Enter' ){\r\n      console.log( 'Enter' );\r\n      // addPost( newPostText ) ;\r\n    }\r\n  };\r\n  const handleOnSubmit = ( values ) => {\r\n    const { newMessageText, } = values;\r\n    addMessage( newMessageText );\r\n  };\r\n\r\n  // const handleOnValidate = ( e ) => {};\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={ handleOnSubmit }\r\n      // validate={ handleOnValidate }\r\n      render={ ( { handleSubmit, } ) => (\r\n        <form onSubmit={ handleSubmit } className={ classes } noValidate>\r\n          <Field validate={ required } name=\"newMessageText\">\r\n            { props => <FormControl label=\"Email:\" { ...props }><input placeholder=\"message text...\"/></FormControl> }\r\n          </Field>\r\n          <Button type=\"submit\">Send Message</Button>\r\n        </form>\r\n      ) }\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormAddChatMessage;\r\n\r\nconst oldInput = ( props ) => {\r\n  const { input, meta, } = props;\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input { ...input } placeholder=\"message text...\"/>\r\n      { meta.error && meta.touched && <span className=\"error\">{ meta.error }</span> }\r\n    </div>\r\n  );\r\n};\r\n","import classNames from 'classnames/bind';\r\nimport styles from './MessageInput.module.scss';\r\n\r\nimport FormAddChatMessage from 'components/Forms/FormAddChatMessage/FormAddChatMessage';\r\n\r\nconst MessageInput = ( props ) => {\r\n  const { addMessage,  } = props;\r\n\r\n  const classes = classNames( [\r\n    styles.MessageInput,\r\n    'message-input',\r\n  ] );\r\n\r\n  return (\r\n    <div className={ classes }>\r\n      <FormAddChatMessage addMessage={ addMessage }/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageInput;\r\n","import React from 'react';\r\n\r\n// STYLES\r\nimport classNames from 'classnames/bind';\r\nimport styles from './Chat.module.scss';\r\n\r\n// COMPONENTS\r\nimport MessageList from './MessageList/MessageList';\r\nimport DialogsContainer from './Dialogs/DialogsContainer';\r\nimport MessageInput from './MessageInput/MessageInput';\r\n\r\nconst Chat = ( props ) => {\r\n  const { dialogs, messages, addMessage, } = props;\r\n\r\n  const classes = classNames( [\r\n    styles.Chat,\r\n    'chat',\r\n  ] );\r\n\r\n  return (\r\n    <div className={ classes }>\r\n      <DialogsContainer dialogs={ dialogs }/>\r\n      <MessageList messages={ messages }/>\r\n      <MessageInput addMessage={ addMessage }/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;","import Chat from './Chat';\r\n\r\n// REDUX\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  addMessage\r\n} from '../../redux/chat-reducer';\r\n\r\nconst mapStateToProps = ( state ) => {\r\n  return {\r\n    dialogs: state.chatPage.dialogs,\r\n    messages: state.chatPage.messages,\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nconst ChatContainer = connect( mapStateToProps, { addMessage, } )( Chat );\r\n\r\nexport default ChatContainer;\r\n","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n// REDUX\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = ( state ) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nconst withAuthRedirect = ( Component ) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render () {\r\n      if ( !this.props?.isAuth ) return <Navigate to=\"/login\"/>;\r\n\r\n      return <Component { ...this.props }/>;\r\n    }\r\n  }\r\n\r\n  return connect( mapStateToProps, {} )( RedirectComponent );\r\n};\r\n\r\nexport default withAuthRedirect;"],"names":["MessageItem","props","message","className","text","messages","classes","classNames","styles","length","map","id","dialogs","dialog","name","compose","withAuthRedirect","addMessage","onSubmit","values","newMessageText","render","handleSubmit","noValidate","validate","required","FormControl","label","placeholder","Button","type","connect","state","chatPage","isAuth","auth","Chat","mapStateToProps","Component","RedirectComponent","this","to","React"],"sourceRoot":""}